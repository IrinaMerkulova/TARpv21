--- loome view, kus kasutame joini
create view vEmployeesByDepartmentIndex
as
select EmployeeIndex.Id, Name, Salary, Gender, DepartmentName
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id

--- view, kus kasutame joini
select * from vEmployeesByDepartmentIndex
-- view on salvestatud virtuaalne tabel

--- view eelised - ???????????? ?????????????
-- 1. saab kasutada andmebaasi skeemi keerukuse lihtsustamiseks, mitte IT inimestele 
-- ??? ????????? ?????? ?? ??????? ?????? ??
-- 2. saab kasutada rakendamise mehhanismina rea ja veerutaseme turvalisusena
-- ????????? ?????? ??????????, ????? ???????????

--- view, mis tagastab ainult IT osakonna töötajad
-- ???, ??????? ?????????? ?????? ?????????? IT.
create view vITDepartment_Employees
as 
select EmployeeIndex.Id, Name, Salary, Gender, DepartmentName
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id
where Department.DepartmentName = 'IT'

-- käivitamine
select * from vITDepartment_Employees

-- ???????????? ???????? ???????? ???????? ??????
--- piirame palga nägemist kolmandatel isikutel
-- veerru turvalisus e kus jõetakse mingi veerg välja
create view vEmployeesDataExceptSalary
as
select EmployeeIndex.Id, Name, Gender, DepartmentName
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id


select * from vEmployeesDataExceptSalary

--- view, kus saab kasutada ainult koondandmete näitamiseks
-- ??? ??? ????????? ??????? ?????? 
-- view, mis tagastab summeeritud andmeid
create view vEmployeesCountByDepartment
as
select DepartmentName, COUNT(EmployeeIndex.Id) as TotalEmployees
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id
group by DepartmentName

select * from vEmployeesCountByDepartment