---???????? ?????????????---
create table EmployeeIndex
(
Id int primary key,
Name nvarchar(20),
Salary int,
Gender nvarchar(20),
DeptNameId int
)

insert into EmployeeIndex values(1, 'John', 5000, 'Male', 3)
insert into EmployeeIndex values(2, 'Mike', 3400, 'Male', 2)
insert into EmployeeIndex values(3, 'Pam', 6000, 'Female', 1)
insert into EmployeeIndex values(4, 'Todd', 4800, 'Male', 4)
insert into EmployeeIndex values(5, 'Sara', 3200, 'Female', 1)
insert into EmployeeIndex values(6, 'Ben', 4800, 'Male', 3)

select * from Department

select EmployeeIndex.Id, Name, Salary, Gender, DepartmentName
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id

---------------------------------------
create view vEmployeesByDepartmentIndex
as
select EmployeeIndex.Id, Name, Salary, Gender, DepartmentName
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id

--- view, kus kasutame joini
select * from vEmployeesByDepartmentIndex
-- view on salvestatud virtuaalne tabel

----------------------------------------------
--- view eelised -- ???????????? ?????????????
--- ??????????? ???????
-- 1. saab kasutada andmebaasi skeemi keerukuse lihtsustamiseks, mitte IT inimestele
--- (??? ????????? ?????? ?? ??????? ?????? ??)
-- 2. saab kasutada rakendamise mehhanismina rea ja veerutaseme turvalisusena
--- (????????? ?????? ??????????, ????? ??????????)

--- view, mis tagastab ainult IT osakonna töötajad
create view vITDepartment_Employees
as 
select EmployeeIndex.Id, Name, Salary, Gender, DepartmentName
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id
where Department.DepartmentName = 'IT'

-- käivitamine
select * from vITDepartment_Employees

--------------------------------------
create view vEmployeesDataExceptSalary
as
select EmployeeIndex.Id, Name, Gender, DepartmentName
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id

select * from vEmployeesDataExceptSalary

---------------------------------------
create view vEmployeesCountByDepartment
as
select DepartmentName, COUNT(EmployeeIndex.Id) as TotalEmployees
from EmployeeIndex
join Department
on EmployeeIndex.DeptNameId = Department.Id
group by DepartmentName

select * from vEmployeesCountByDepartment
